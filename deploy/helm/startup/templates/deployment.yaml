apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "startup.fullname" . }}
  labels:
{{ include "startup.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "startup.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "startup.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: db-migrations
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "manage.py", "migrate"]
          env:
            - name: DATA_DIR
              value: /var/www/data/
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: BASICAUTH_USER
            value: {{ .Values.basicAuth.user }}
          - name: BASICAUTH_PASS
            value: {{ .Values.basicAuth.pass }}
          - name: SERVICE_NAME
            value: "{{ .Release.Name }}-service"
          - name: SERVICE_PORT
            value: "8080"
          - name: DATA_DIR
            value: /var/www/data/
          volumeMounts:
          - name: data
            mountPath: /var/www/data/
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      serviceAccount: {{ .Release.Name }}-service-account
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-pvc"
        {{- else }}
          emptyDir: {}
        {{- end }}
